/**
 * @fileoverview added by tsickle
 * Generated from: lib/model/date-config.model.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @record
 */
export function DateConfigModel() { }
if (false) {
    /**
     * \@description value of date
     * @type {?|undefined}
     */
    DateConfigModel.prototype.value;
    /**
     * \@description if no value provided use today as init value
     * @type {?|undefined}
     */
    DateConfigModel.prototype.initValue;
    /**
     * \@description is date gregorian?
     * @type {?|undefined}
     */
    DateConfigModel.prototype.isGregorian;
    /**
     * \@description shamsi date format, see moment and moment-jalaali docs
     * to see available formats
     * @type {?|undefined}
     */
    DateConfigModel.prototype.format;
    /**
     * \@description gregorian date format, see moment and moment-jalaali docs
     * to see available formats
     * @type {?|undefined}
     */
    DateConfigModel.prototype.gregorianFormat;
    /**
     * \@description min date that user can select (timestamp)
     * @type {?|undefined}
     */
    DateConfigModel.prototype.min;
    /**
     * \@description max date that user can select (timestamp)
     * @type {?|undefined}
     */
    DateConfigModel.prototype.max;
    /**
     * \@description onSelect date callback
     * @type {?|undefined}
     */
    DateConfigModel.prototype.onSelect;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1jb25maWcubW9kZWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1wZXJzaWFuLWRhdGVwaWNrZXIvc3JjL2xpYi9tb2RlbC9kYXRlLWNvbmZpZy5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLHFDQTJDQzs7Ozs7O0lBdENDLGdDQUF3Qjs7Ozs7SUFLeEIsb0NBQW9COzs7OztJQUtwQixzQ0FBc0I7Ozs7OztJQU10QixpQ0FBZ0I7Ozs7OztJQU1oQiwwQ0FBeUI7Ozs7O0lBS3pCLDhCQUFhOzs7OztJQUtiLDhCQUFhOzs7OztJQUtiLG1DQUFrRiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgRGF0ZUNvbmZpZ01vZGVsIHtcblxuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIHZhbHVlIG9mIGRhdGVcbiAgICovXG4gIHZhbHVlPzogc3RyaW5nIHwgbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb24gaWYgbm8gdmFsdWUgcHJvdmlkZWQgdXNlIHRvZGF5IGFzIGluaXQgdmFsdWVcbiAgICovXG4gIGluaXRWYWx1ZT86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvbiBpcyBkYXRlIGdyZWdvcmlhbj9cbiAgICovXG4gIGlzR3JlZ29yaWFuPzogYm9vbGVhbjtcblxuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIHNoYW1zaSBkYXRlIGZvcm1hdCwgc2VlIG1vbWVudCBhbmQgbW9tZW50LWphbGFhbGkgZG9jc1xuICAgKiB0byBzZWUgYXZhaWxhYmxlIGZvcm1hdHNcbiAgICovXG4gIGZvcm1hdD86IHN0cmluZztcblxuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIGdyZWdvcmlhbiBkYXRlIGZvcm1hdCwgc2VlIG1vbWVudCBhbmQgbW9tZW50LWphbGFhbGkgZG9jc1xuICAgKiB0byBzZWUgYXZhaWxhYmxlIGZvcm1hdHNcbiAgICovXG4gIGdyZWdvcmlhbkZvcm1hdD86IHN0cmluZztcblxuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIG1pbiBkYXRlIHRoYXQgdXNlciBjYW4gc2VsZWN0ICh0aW1lc3RhbXApXG4gICAqL1xuICBtaW4/OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvbiBtYXggZGF0ZSB0aGF0IHVzZXIgY2FuIHNlbGVjdCAodGltZXN0YW1wKVxuICAgKi9cbiAgbWF4PzogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb24gb25TZWxlY3QgZGF0ZSBjYWxsYmFja1xuICAgKi9cbiAgb25TZWxlY3Q/OiAoc2hhbXNpRGF0ZTogc3RyaW5nLCBncmVnb3JpYW5EYXRlOiBzdHJpbmcsIHRpbWVzdGFtcDogbnVtYmVyKSA9PiB2b2lkO1xufVxuIl19