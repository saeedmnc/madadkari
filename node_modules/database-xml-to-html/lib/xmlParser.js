var htmlparser = require('htmlparser2')

exports.parse = function (xml) {
	var root = {type: 'root', children: []}
	var nodes = []
	var c_node

	var parser = new htmlparser.Parser({
		onopentag: function(name, attrs){
			var node = makeElementNode(name, attrs)
			if (c_node) {
				nodes.push(c_node)
				c_node.children.push(node)
				c_node = node
			} else {
				c_node = node
				root.children.push(c_node)
			}
		},
		ontext: function(text) {
			text = text.trim()
			if (text) {
				var node = makeTextNode(text)
				if (c_node) {
					c_node.children.push(node)
				} else {
					console.log('no parent node text: ' + text)
				}
			}
		},
		onclosetag: function(tagname){
			c_node = nodes.pop()
		}
	}, {xmlMode: true})

	parser.write(xml)

	return root
}

function makeElementNode(name, attrs) {
	return {
		name: name,
		type: 'element',
		attrs: attrs,
		children: []
	}
}

function makeTextNode(text) {
	return {
		type: 'text',
		text: text
	}
}