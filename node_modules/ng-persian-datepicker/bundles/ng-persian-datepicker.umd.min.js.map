{"version":3,"sources":["../../../projects/ng-persian-datepicker/src/lib/ng-persian-datepicker.service.ts","../../../projects/ng-persian-datepicker/src/lib/ng-persian-datepicker.component.ts","../../../projects/ng-persian-datepicker/src/lib/month-text.pipe.ts","../../../projects/ng-persian-datepicker/src/lib/ng-persian-datepicker.module.ts"],"names":["Injectable","args","providedIn","NgPersianDatepickerComponent","this","containerInlineStyle","uiYearViewModel","uiMonthViewModel","viewDateTitle","viewModes","currentViewMode","years","months","days","hour","minute","second","hourText","minuteText","secondText","amPmText","fastTimeChangeTimeOut","fastTimeChangeInterval","wasInsideClick","input","_dateValue","dateValue","dateInitValue","dateIsGregorian","dateFormat","dateGregorianFormat","dateMin","dateMax","dateOnInit","dateOnSelect","_timeEnable","timeShowSecond","_timeMeridian","uiTheme","uiIsVisible","uiHideOnOutsideClick","uiHideAfterSelectDate","uiAutoPosition","uiPositionOffset","uiContainerWidth","Object","defineProperty","prototype","value","setTime","seTimeText","checkViewModes","ngOnInit","setId","moment","loadPersian","usePersianDigits","dialect","setWeekDays","setViewModes","setToday","setDateInitValue","setSelectedDate","setViewDate","setInputValue","lockInputValue","setShowOnInputFocus","ngOnDestroy","removeEventListener","inputEventFocusListener","inputEventInputListener","id","Math","random","toString","substr","weekDays","weekdaysMin","unshift","pop","uiMonthView","push","uiYearView","length","viewModesCount","today","valueOf","selectedDate","String","format","Number","viewDate","onChangeViewDate","startOf","setYears","setMonths","setDays","setViewDateTitle","add","i","year","jYear","timestamp","isYearOfTodayDate","isYearOfSelectedDate","isYearDisabled","month","jMonth","indexValue","isMonthOfTodayDate","isMonthOfToday","isMonthOfSelectedDate","isMonthDisabled","prevMonthDetails","currentMonthDetails","nextMonthDetails","prevMonth","currentMonth","nextMonth","currentMonthDays","jDaysInMonth","prevMonthDays","nextMonthDays","jDate","row","rowValue","col","fromPrevMonth","day","index","monthIndex","isDayInCurrentMonth","isDayOfTodayDate","isDayOfSelectedDate","isDayDisabled","_a","_b","_c","setHourText","setMinuteText","setSecondText","setAmPmText","padStart","dispatchEvent","Event","_this","addEventListener","setAttribute","calcInputPositionAndSize","skipViewDate","skip","type","navigate","forward","nextViewMode","selectToday","preventClose","changeSelectedDate","yearClick","viewModeIndex","indexOf","monthClick","dayClick","isDateInRange","date","isYear","isMonth","result","min","max","onChangeSelectedDate","increaseHour","onTimeChange","decreaseHour","increaseMinute","decreaseMinute","increaseSecond","decreaseSecond","toggleAmPm","setIncreaseHourInterval","increaseHourTimeout","setTimeout","increaseHourInterval","setInterval","clearIncreaseHourInterval","clearTimeout","clearInterval","setDecreaseHourInterval","decreaseHourTimeout","decreaseHourInterval","clearDecreaseHourInterval","setIncreaseMinuteInterval","increaseMinuteTimeout","increaseMinuteInterval","clearIncreaseMinuteInterval","setDecreaseMinuteInterval","decreaseMinuteTimeout","decreaseMinuteInterval","clearDecreaseMinuteInterval","setIncreaseSecondInterval","increaseSecondTimeout","increaseSecondInterval","clearIncreaseSecondInterval","setDecreaseSecondInterval","decreaseSecondTimeout","decreaseSecondInterval","clearDecreaseSecondInterval","setContainerInlineStyle","containerWidth","width","containerPosition","position","top","left","inputPosition","inputSize","assign","element","offsetTop","offsetLeft","getBoundingClientRect","height","onInsideClick","onOutsideClick","event","target","getAttribute","Component","selector","template","Input","HostListener","MonthTextPipe","transform","Pipe","name","NgModule","declarations","imports","CommonModule","exports"],"mappings":"6dAOE,iCALDA,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,6JCgBZ,SAAAC,IAIAC,KAAAC,qBAA+B,GAIvBD,KAAAE,iBAAkB,EAClBF,KAAAG,kBAAmB,EAE3BH,KAAAI,cAAgB,GAChBJ,KAAAK,UAA2B,CAAC,OAC5BL,KAAAM,gBAAkB,EAMlBN,KAAAO,MAAqB,GACrBP,KAAAQ,OAAuB,GACvBR,KAAAS,KAA0B,GAElBT,KAAAU,KAAO,EACPV,KAAAW,OAAS,EACTX,KAAAY,OAAS,EAEjBZ,KAAAa,SAAW,GACXb,KAAAc,WAAa,GACbd,KAAAe,WAAa,GACbf,KAAAgB,SAAW,GAEHhB,KAAAiB,sBAAwB,IACxBjB,KAAAkB,uBAAyB,IAoBzBlB,KAAAmB,gBAAiB,EAMhBnB,KAAAoB,MAA0B,KAG3BpB,KAAAqB,WAA8B,GAC7BrB,KAAAsB,UAA6B,GAC7BtB,KAAAuB,eAAgB,EAChBvB,KAAAwB,iBAAkB,EAClBxB,KAAAyB,WAAa,yBACbzB,KAAA0B,oBAAsB,sBACtB1B,KAAA2B,QAAkB,KAClB3B,KAAA4B,QAAkB,KAClB5B,KAAA6B,WAAU,aACV7B,KAAA8B,aAAY,aAErB9B,KAAA+B,aAAc,EAOL/B,KAAAgC,gBAAiB,EAE1BhC,KAAAiC,eAAgB,EAOPjC,KAAAkC,QAAU,UACVlC,KAAAmC,aAAc,EACdnC,KAAAoC,sBAAuB,EACvBpC,KAAAqC,uBAAwB,EACxBrC,KAAAsC,gBAAiB,EACjBtC,KAAAuC,iBAAkC,CAAC,EAAG,GACtCvC,KAAAwC,iBAAmB,UArB5BC,OAAAC,eACI3C,EAAA4C,UAAA,aAAU,KADd,SACeC,GACb5C,KAAK+B,YAAca,EACnB5C,KAAK6C,UACL7C,KAAK8C,8CAKPL,OAAAC,eACI3C,EAAA4C,UAAA,eAAY,KADhB,SACiBC,GACf5C,KAAKiC,cAAgBW,EACrB5C,KAAK8C,8CAUPL,OAAAC,eACI3C,EAAA4C,UAAA,aAAU,KAId,WACE,OAAO3C,KAAKE,qBANd,SACe0C,GACb5C,KAAKE,gBAAkB0C,EACvB5C,KAAK+C,kDAKPN,OAAAC,eACI3C,EAAA4C,UAAA,cAAW,KAIf,WACE,OAAO3C,KAAKG,sBANd,SACgByC,GACd5C,KAAKG,iBAAmByC,EACxB5C,KAAK+C,kDAMPhD,EAAA4C,UAAAK,SAAA,WACEhD,KAAKiD,QACLC,EAAOC,YAAY,CACjBC,kBAAkB,EAClBC,QAAS,mBAEXrD,KAAKsD,cAELtD,KAAKuD,eAELvD,KAAKwD,WACLxD,KAAKyD,mBAELzD,KAAK0D,kBACL1D,KAAK2D,cAEL3D,KAAK6C,UACL7C,KAAK8C,aAEL9C,KAAK4D,gBACL5D,KAAK6D,iBACL7D,KAAK8D,uBAGP/D,EAAA4C,UAAAoB,YAAA,WACM/D,KAAKoB,QACPpB,KAAKoB,MAAM4C,oBAAoB,QAAShE,KAAKiE,yBAC7CjE,KAAKoB,MAAM4C,oBAAoB,QAAShE,KAAKkE,2BAIjDnE,EAAA4C,UAAAM,MAAA,WACEjD,KAAKmE,GAAK,yBAA2BC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,IAG5ExE,EAAA4C,UAAAW,YAAA,WACEtD,KAAKwE,SAAWtB,EAAOuB,cACvBzE,KAAKwE,SAASE,QAAQ1E,KAAKwE,SAASG,QAGtC5E,EAAA4C,UAAAY,aAAA,WACEvD,KAAKK,UAAY,CAAC,OACdL,KAAK4E,aACP5E,KAAKK,UAAUwE,KAAK,SAElB7E,KAAK8E,YACP9E,KAAKK,UAAUwE,KAAK,QAElB7E,KAAKK,UAAU0E,QAAU/E,KAAKM,kBAChCN,KAAKM,gBAAkB,IAI3BP,EAAA4C,UAAAI,eAAA,eACMiC,EAAiB,EACjBhF,KAAK8E,YACPE,IAEEhF,KAAK4E,aACPI,IAEEA,IAAmBhF,KAAKK,UAAU0E,QACpC/E,KAAKuD,gBAITxD,EAAA4C,UAAAa,SAAA,WACExD,KAAKiF,MAAQ/B,KAGfnD,EAAA4C,UAAAc,iBAAA,YACMzD,KAAKsB,WAActB,KAAKuB,gBAG5BvB,KAAKqB,WAAarB,KAAKiF,MAAMC,UAC7BlF,KAAKmF,aAAejC,EAAQlD,KAAe,YAC3CA,KAAK6B,WACHuD,OAAOpF,KAAKmF,aAAaE,OAAOrF,KAAKyB,aACrC2D,OAAOpF,KAAKmF,aAAaE,OAAOrF,KAAK0B,sBACrC4D,OAAOtF,KAAKmF,aAAaD,cAI7BnF,EAAA4C,UAAAe,gBAAA,WACO1D,KAAKsB,YAGVtB,KAAKqB,WAAarB,KAAKsB,UACQ,iBAApBtB,KAAKqB,aACVrB,KAAKwB,gBACPxB,KAAKqB,WAAa6B,EAAQlD,KAAe,WAAaA,KAAK0B,qBAAqBwD,UAEhFlF,KAAKqB,WAAa6B,EAAQlD,KAAe,WAAaA,KAAKyB,YAAYyD,WAG3ElF,KAAKmF,aAAejC,EAAQlD,KAAe,cAG7CD,EAAA4C,UAAAgB,YAAA,WACO3D,KAAKqB,WAGRrB,KAAKuF,SAAWrC,EAAOlD,KAAKmF,cAF5BnF,KAAKuF,SAAWrC,EAAOlD,KAAKiF,OAI9BjF,KAAKwF,oBAGPzF,EAAA4C,UAAA6C,iBAAA,WACExF,KAAKuF,SAASE,QAAQ,UACtBzF,KAAK0F,WACL1F,KAAK2F,YACL3F,KAAK4F,UACL5F,KAAK6F,oBAGP9F,EAAA4C,UAAA+C,SAAA,WACE1F,KAAKO,MAAQ,OACPA,EAAQ2C,EAAOlD,KAAKuF,UAC1BhF,EAAMkF,QAAQ,SACdlF,EAAMuF,KAAK,EAAG,SACd,IAAK,IAAIC,EAAI,EAAIA,EAAI,GAAKA,IAAK,KACvBC,EAAO,CAACzF,EAAM2E,UAAW3E,EAAM0F,SACrCjG,KAAKO,MAAMsE,KAAK,CACdqB,UAAWF,EAAK,GAChBpD,MAAOoD,EAAK,GACZG,kBAAmBnG,KAAKmG,kBAAkBH,GAC1CI,qBAAsBpG,KAAKoG,qBAAqBJ,GAChDK,eAAgBrG,KAAKqG,eAAeL,KAEtCzF,EAAMuF,IAAI,EAAG,WAIjB/F,EAAA4C,UAAAgD,UAAA,WACE3F,KAAKQ,OAAS,OACRA,EAAS0C,EAAOlD,KAAKuF,UAC3B/E,EAAOiF,QAAQ,SACf,IAAK,IAAIM,EAAI,EAAIA,EAAI,GAAKA,IAAK,KACvBO,EAAQ,CAAC9F,EAAO0E,UAAW1E,EAAOyF,QAASzF,EAAO+F,UACxDvG,KAAKQ,OAAOqE,KAAK,CACfqB,UAAWI,EAAM,GACjBN,KAAMM,EAAM,GACZE,WAAYF,EAAM,GAClBG,mBAAoBzG,KAAK0G,eAAeJ,GACxCK,sBAAuB3G,KAAK2G,sBAAsBL,GAClDM,gBAAiB5G,KAAK4G,gBAAgBN,KAExC9F,EAAOsF,IAAI,EAAG,YAIlB/F,EAAA4C,UAAAiD,QAAA,WACE5F,KAAKS,KAAO,OAENoG,EAAyC,GACzCC,EAA4C,GAC5CC,EAAyC,GAEzCC,EAAY9D,EAAOlD,KAAKuF,UACxB0B,EAAe/D,EAAOlD,KAAKuF,UAC3B2B,EAAYhE,EAAOlD,KAAKuF,UAE9ByB,EAAUlB,KAAK,EAAG,UAClBoB,EAAUpB,IAAI,EAAG,UAMjB,QAJMqB,EAAmBjE,EAAOkE,aAAaH,EAAahB,QAASgB,EAAaV,UAC1Ec,EAAgBnE,EAAOkE,aAAaJ,EAAUf,QAASe,EAAUT,UACjEe,EAAgBpE,EAAOkE,aAAaF,EAAUjB,QAASiB,EAAUX,UAE9DR,EAAI,EAAIA,EAAIsB,EAAgBtB,IACnCc,EAAiBhC,KAAK,CAACmC,EAAU9B,UAAW8B,EAAUf,QAASe,EAAUT,SAAUS,EAAUO,UAC7FP,EAAUlB,IAAI,EAAG,OAEnB,IAASC,EAAI,EAAIA,EAAIoB,EAAmBpB,IACtCe,EAAoBjC,KAAK,CAACoC,EAAa/B,UAAW+B,EAAahB,QAASgB,EAAaV,SAAUU,EAAaM,UAC5GN,EAAanB,IAAI,EAAG,OAEtB,IAASC,EAAI,EAAIA,EAAIuB,EAAgBvB,IACnCgB,EAAiBlC,KAAK,CAACqC,EAAUhC,UAAWgC,EAAUjB,QAASiB,EAAUX,SAAUW,EAAUK,UAC7FL,EAAUpB,IAAI,EAAG,OAGnB,IAAK,IAAI0B,EAAM,EAAGA,EAAM,EAAIA,IAAO,CAEjC,QADMC,EAAuB,GACpBC,EAAM,EAAGA,EAAM,EAAIA,IAAO,KAC3BC,EAAyC,IAAxB3H,KAAKuF,SAASqC,MAAe,EAAK5H,KAAKuF,SAASqC,MAAQ,EAC3EC,EAAgB,EAANL,EAAWE,EAAOC,EAC5BC,EAAqB,KAGvBA,EAFEC,EAAQ,EAEJhB,EADNgB,EAAQhB,EAAiB9B,QAAU4C,EAAgBD,IAE1CG,GAASf,EAAoB/B,OAEhCgC,EADNc,GAAgBf,EAAoB/B,QAG9B+B,EAAoBe,GAE5BJ,EAAS5C,KAAK,CACZqB,UAAW0B,EAAI,GACf5B,KAAM4B,EAAI,GACVE,WAAYF,EAAI,GAChBhF,MAAOgF,EAAI,GACXG,oBAAqB/H,KAAK+H,oBAAoBH,GAC9CI,iBAAkBhI,KAAKgI,iBAAiBJ,GACxCK,oBAAqBjI,KAAKiI,oBAAoBL,GAC9CM,cAAelI,KAAKkI,cAAcN,KAGtC5H,KAAKS,KAAKoE,KAAK4C,KAInB1H,EAAA4C,UAAAkD,iBAAA,eACQG,EAAOhG,KAAKuF,SAASU,QAC3B,OAAQjG,KAAKK,UAAUL,KAAKM,kBAC1B,IAAK,MACHN,KAAKI,cAAgBJ,KAAKuF,SAASF,OAAO,SAAW,IAAMW,EAAK1B,WAChE,MACF,IAAK,QACHtE,KAAKI,cAAgB4F,EAAK1B,WAC1B,MACF,IAAK,OACHtE,KAAKI,eAAiB4F,EAAO,GAAG1B,WAAa,KAAO0B,EAAO,GAAG1B,aAKpEvE,EAAA4C,UAAAE,QAAA,qBACE,GAAI7C,KAAKmF,aAIP,OAHAnF,KAAKU,KAAOV,KAAKmF,aAAazE,OAC9BV,KAAKW,OAASX,KAAKmF,aAAaxE,cAChCX,KAAKY,OAASZ,KAAKmF,aAAavE,UAGlCZ,KAAKU,MAAiB,QAAVyH,EAAAnI,KAAKiF,aAAK,IAAAkD,OAAA,EAAAA,EAAEzH,SAAU,EAClCV,KAAKW,QAAmB,QAAVyH,EAAApI,KAAKiF,aAAK,IAAAmD,OAAA,EAAAA,EAAEzH,WAAY,EACtCX,KAAKY,QAAmB,QAAVyH,EAAArI,KAAKiF,aAAK,IAAAoD,OAAA,EAAAA,EAAEzH,WAAY,GAGxCb,EAAA4C,UAAAG,WAAA,WACE9C,KAAKsI,cACLtI,KAAKuI,gBACLvI,KAAKwI,gBACLxI,KAAKyI,eAGP1I,EAAA4C,UAAA2F,YAAA,eACQ5H,EAAOV,KAAKU,KACbV,KAAKiC,cASRjC,KAAKa,SALM,IAATH,EAIAA,EAAO,IACQA,EAAO,IAAI4D,WAAWoE,SAAS,EAAG,KAGrChI,EAAK4D,WAAWoE,SAAS,EAAG,KAP1B,IAAKpE,WAAWoE,SAAS,EAAG,KAJ5C1I,KAAKa,SAAWH,EAAK4D,WAAWoE,SAAS,EAAG,MAchD3I,EAAA4C,UAAA4F,cAAA,WACEvI,KAAKc,WAAad,KAAKW,OAAO2D,WAAWoE,SAAS,EAAG,MAGvD3I,EAAA4C,UAAA6F,cAAA,WACExI,KAAKe,WAAaf,KAAKY,OAAO0D,WAAWoE,SAAS,EAAG,MAGvD3I,EAAA4C,UAAA8F,YAAA,WACMzI,KAAKU,MAAQ,GACfV,KAAKgB,SAAW,KAGlBhB,KAAKgB,SAAW,MAGlBjB,EAAA4C,UAAAiB,cAAA,SAAc+E,QAAA,IAAAA,IAAAA,GAAA,GACP3I,KAAKoB,OAGNpB,KAAKqB,aACPrB,KAAKoB,MAAMwB,MAAQM,EAAQlD,KAAe,YAAaqF,OAAOrF,KAAKyB,YAC/DkH,GACF3I,KAAKoB,MAAMuH,cAAc,IAAIC,MAAM,YAKzC7I,EAAA4C,UAAAkB,eAAA,WAAA,IAAAgF,EAAA7I,KACOA,KAAKoB,QAGVpB,KAAKkE,wBAAuB,WAC1B2E,EAAKjF,eAAc,IAErB5D,KAAKoB,MAAM0H,iBAAiB,QAAS9I,KAAKkE,2BAG5CnE,EAAA4C,UAAAmB,oBAAA,WAAA,IAAA+E,EAAA7I,KACOA,KAAKoB,QAGVpB,KAAKoB,MAAM2H,aAAa,qBAAsB/I,KAAKmE,IACnDnE,KAAKiE,wBAAuB,WAC1B4E,EAAKG,2BACLH,EAAK1G,aAAc,GAErBnC,KAAKoB,MAAM0H,iBAAiB,QAAS9I,KAAKiE,2BAG5ClE,EAAA4C,UAAAsG,aAAA,SAAaC,EAAcC,GACZ,IAATA,EACFnJ,KAAKuF,SAASO,IAAIoD,EAAM,SACN,IAATC,GACTnJ,KAAKuF,SAASO,IAAIoD,EAAM,WAI5BnJ,EAAA4C,UAAAyG,SAAA,SAASC,QAAA,IAAAA,IAAAA,GAAA,OACHH,EAAO,EAIX,OAHKG,IACHH,IAAe,GAETlJ,KAAKK,UAAUL,KAAKM,kBAC1B,IAAK,MACHN,KAAKiJ,aAAaC,EAAM,GACxB,MACF,IAAK,QACHlJ,KAAKiJ,aAAaC,EAAM,GACxB,MACF,IAAK,OACHlJ,KAAKiJ,aAAqB,GAAPC,EAAY,GAGnClJ,KAAKwF,oBAGPzF,EAAA4C,UAAA2G,aAAA,WACE,GAA8B,IAA1BtJ,KAAKK,UAAU0E,OAAnB,CAGA,GAAI/E,KAAKK,UAAU0E,QAAW/E,KAAKM,gBAAkB,EAGnD,OAFAN,KAAKM,gBAAkB,OACvBN,KAAK6F,mBAGP7F,KAAKM,kBACLN,KAAK6F,qBAGP9F,EAAA4C,UAAA4G,YAAA,WACEvJ,KAAKwD,WACLxD,KAAKwJ,cAAe,EACpBxJ,KAAKyJ,mBAAmBzJ,KAAKiF,QAG/BlF,EAAA4C,UAAA+G,UAAA,SAAU1D,GACR,IAAIA,EAAKK,eAAT,CAGArG,KAAKuF,SAAWrC,EAAO8C,EAAKE,eACxByD,EAAgB3J,KAAKK,UAAUuJ,QAAQ,UACpB,IAAnBD,IACFA,EAAgB3J,KAAKK,UAAUuJ,QAAQ,QAEzC5J,KAAKM,gBAAkBqJ,EACvB3J,KAAKwF,qBAGPzF,EAAA4C,UAAAkH,WAAA,SAAWvD,GACLA,EAAMM,kBAGV5G,KAAKuF,SAAWrC,EAAOoD,EAAMJ,WAC7BlG,KAAKM,gBAAkBN,KAAKK,UAAUuJ,QAAQ,OAC9C5J,KAAKwF,qBAGPzF,EAAA4C,UAAAmH,SAAA,SAASlC,GACHA,EAAIM,eAGRlI,KAAKyJ,mBAAmBvG,EAAO0E,EAAI1B,aAGrCnG,EAAA4C,UAAAwD,kBAAA,SAAkBH,GAChB,OACEhG,KAAKiF,MAAMgB,UAAYD,EAAK,IAIhCjG,EAAA4C,UAAAyD,qBAAA,SAAqBJ,GACnB,QAAKhG,KAAKmF,cAIRa,EAAK,KAAOhG,KAAKmF,aAAac,SAIlClG,EAAA4C,UAAA0D,eAAA,SAAeC,GACb,OAAQtG,KAAK+J,cAAczD,EAAM,IAAI,GAAM,IAG7CvG,EAAA4C,UAAA+D,eAAA,SAAeJ,GACb,OACEtG,KAAKiF,MAAMgB,UAAYK,EAAM,IAC7BtG,KAAKiF,MAAMsB,WAAaD,EAAM,IAIlCvG,EAAA4C,UAAAgE,sBAAA,SAAsBL,GACpB,QAAKtG,KAAKmF,eAIRmB,EAAM,KAAOtG,KAAKmF,aAAac,SAC/BK,EAAM,KAAOtG,KAAKmF,aAAaoB,WAInCxG,EAAA4C,UAAAiE,gBAAA,SAAgBN,GACd,OAAQtG,KAAK+J,cAAczD,EAAM,IAAI,GAAO,IAG9CvG,EAAA4C,UAAAoF,oBAAA,SAAoBH,GAClB,OACEA,EAAI,KAAO5H,KAAKuF,SAASU,SACzB2B,EAAI,KAAO5H,KAAKuF,SAASgB,UAI7BxG,EAAA4C,UAAAqF,iBAAA,SAAiBJ,GACf,OACEA,EAAI,KAAO5H,KAAKiF,MAAMgB,SACtB2B,EAAI,KAAO5H,KAAKiF,MAAMsB,UACtBqB,EAAI,KAAO5H,KAAKiF,MAAMsC,SAI1BxH,EAAA4C,UAAAsF,oBAAA,SAAoBL,GAClB,QAAK5H,KAAKmF,eAIRyC,EAAI,KAAO5H,KAAKmF,aAAac,SAC7B2B,EAAI,KAAO5H,KAAKmF,aAAaoB,UAC7BqB,EAAI,KAAO5H,KAAKmF,aAAaoC,UAIjCxH,EAAA4C,UAAAuF,cAAA,SAAcN,GACZ,OAAQ5H,KAAK+J,cAAcnC,EAAI,IAAI,GAAO,IAG5C7H,EAAA4C,UAAAoH,cAAA,SAAcC,EAAcC,EAAiBC,OACrCC,EAAyB,GAC/B,GAAInK,KAAK2B,QAAS,KACVyI,EAAMlH,EAAOlD,KAAK2B,SACpBsI,GACFG,EAAI3E,QAAQ,SAEVyE,GACFE,EAAI3E,QAAQ,UAEd0E,EAAOtF,KAAKuF,EAAIlF,WAAa8E,GAE/B,GAAIhK,KAAK4B,QAAS,KACVyI,EAAMnH,EAAOlD,KAAK4B,SACpBqI,GACFI,EAAI5E,QAAQ,SAEVyE,GACFG,EAAI5E,QAAQ,UAEd0E,EAAOtF,KAAKwF,EAAInF,WAAa8E,GAE/B,SAAoC,IAA3BG,EAAOP,SAAQ,KAG1B7J,EAAA4C,UAAA8G,mBAAA,SAAmBO,GACjBhK,KAAKmF,aAAejC,EAAO8G,GAC3BhK,KAAKsK,wBAGPvK,EAAA4C,UAAA2H,qBAAA,WACMtK,KAAK+B,aACP/B,KAAKmF,aAAazE,KAAKV,KAAKU,MAC5BV,KAAKmF,aAAaxE,OAAOX,KAAKW,QAC9BX,KAAKmF,aAAavE,OAAOZ,KAAKY,UAE9BZ,KAAKwD,WACLxD,KAAKmF,aAAazE,KAAKV,KAAKiF,MAAMvE,QAClCV,KAAKmF,aAAaxE,OAAOX,KAAKiF,MAAMtE,UACpCX,KAAKmF,aAAavE,OAAOZ,KAAKiF,MAAMrE,WAEtCZ,KAAKqB,WAAarB,KAAKmF,aAAaD,UACpClF,KAAK4D,gBACD5D,KAAKqC,wBAA0BrC,KAAKwJ,aACtCxJ,KAAKmC,aAAc,EAEnBnC,KAAKwJ,cAAe,EAEtBxJ,KAAK2D,cACL3D,KAAK8B,aACHsD,OAAOpF,KAAKmF,aAAaE,OAAOrF,KAAKyB,aACrC2D,OAAOpF,KAAKmF,aAAaE,OAAOrF,KAAK0B,sBACrC4D,OAAOtF,KAAKmF,aAAaD,aAI7BnF,EAAA4C,UAAA4H,aAAA,WACOvK,KAAKU,KAAO,IAAO,GACtBV,KAAKU,KAAO,EAEZV,KAAKU,OAEPV,KAAKwK,gBAGPzK,EAAA4C,UAAA8H,aAAA,WACOzK,KAAKU,KAAO,IAAQ,EACvBV,KAAKU,KAAO,GAEZV,KAAKU,OAEPV,KAAKwK,gBAGPzK,EAAA4C,UAAA+H,eAAA,WACO1K,KAAKW,OAAS,IAAO,GACxBX,KAAKW,OAAS,EAEdX,KAAKW,SAEPX,KAAKwK,gBAGPzK,EAAA4C,UAAAgI,eAAA,WACO3K,KAAKW,OAAS,IAAQ,EACzBX,KAAKW,OAAS,GAEdX,KAAKW,SAEPX,KAAKwK,gBAGPzK,EAAA4C,UAAAiI,eAAA,WACO5K,KAAKY,OAAS,IAAO,GACxBZ,KAAKY,OAAS,EAEdZ,KAAKY,SAEPZ,KAAKwK,gBAGPzK,EAAA4C,UAAAkI,eAAA,WACO7K,KAAKY,OAAS,IAAQ,EACzBZ,KAAKY,OAAS,GAEdZ,KAAKY,SAEPZ,KAAKwK,gBAGPzK,EAAA4C,UAAAmI,WAAA,WACM9K,KAAKU,KAAO,GACdV,KAAKU,MAAQ,GAEbV,KAAKU,MAAQ,GAEfV,KAAKwK,gBAGPzK,EAAA4C,UAAA6H,aAAA,WACExK,KAAKwJ,cAAe,EACpBxJ,KAAK8C,aACL9C,KAAKyJ,mBAAmBzJ,KAAKmF,eAG/BpF,EAAA4C,UAAAoI,wBAAA,WAAA,IAAAlC,EAAA7I,KACEA,KAAKgL,oBAAsBC,YAAU,WACnCpC,EAAKqC,qBAAuBC,aAAW,WACrCtC,EAAK0B,iBACJ1B,EAAK3H,0BACPlB,KAAKiB,wBAGVlB,EAAA4C,UAAAyI,0BAAA,WACEC,aAAarL,KAAKgL,qBAClBM,cAActL,KAAKkL,uBAGrBnL,EAAA4C,UAAA4I,wBAAA,WAAA,IAAA1C,EAAA7I,KACEA,KAAKwL,oBAAsBP,YAAU,WACnCpC,EAAK4C,qBAAuBN,aAAW,WACrCtC,EAAK4B,iBACJ5B,EAAK3H,0BACPlB,KAAKiB,wBAGVlB,EAAA4C,UAAA+I,0BAAA,WACEL,aAAarL,KAAKwL,qBAClBF,cAActL,KAAKyL,uBAGrB1L,EAAA4C,UAAAgJ,0BAAA,WAAA,IAAA9C,EAAA7I,KACEA,KAAK4L,sBAAwBX,YAAU,WACrCpC,EAAKgD,uBAAyBV,aAAW,WACvCtC,EAAK6B,mBACJ7B,EAAK3H,0BACPlB,KAAKiB,wBAGVlB,EAAA4C,UAAAmJ,4BAAA,WACET,aAAarL,KAAK4L,uBAClBN,cAActL,KAAK6L,yBAGrB9L,EAAA4C,UAAAoJ,0BAAA,WAAA,IAAAlD,EAAA7I,KACEA,KAAKgM,sBAAwBf,YAAU,WACrCpC,EAAKoD,uBAAyBd,aAAW,WACvCtC,EAAK8B,mBACJ9B,EAAK3H,0BACPlB,KAAKiB,wBAGVlB,EAAA4C,UAAAuJ,4BAAA,WACEb,aAAarL,KAAKgM,uBAClBV,cAActL,KAAKiM,yBAGrBlM,EAAA4C,UAAAwJ,0BAAA,WAAA,IAAAtD,EAAA7I,KACEA,KAAKoM,sBAAwBnB,YAAU,WACrCpC,EAAKwD,uBAAyBlB,aAAW,WACvCtC,EAAK+B,mBACJ/B,EAAK3H,0BACPlB,KAAKiB,wBAGVlB,EAAA4C,UAAA2J,4BAAA,WACEjB,aAAarL,KAAKoM,uBAClBd,cAActL,KAAKqM,yBAGrBtM,EAAA4C,UAAA4J,0BAAA,WAAA,IAAA1D,EAAA7I,KACEA,KAAKwM,sBAAwBvB,YAAU,WACrCpC,EAAK4D,uBAAyBtB,aAAW,WACvCtC,EAAKgC,mBACJhC,EAAK3H,0BACPlB,KAAKiB,wBAGVlB,EAAA4C,UAAA+J,4BAAA,WACErB,aAAarL,KAAKwM,uBAClBlB,cAActL,KAAKyM,yBAGrB1M,EAAA4C,UAAAgK,wBAAA,WACE,GAAK3M,KAAKsC,eAAV,KAGMsK,EAAiB,CACrBC,MAAO,SAEHC,EAAoB,CACxBC,SAAU,WACVC,IAAK5H,OAAOpF,KAAKuC,iBAAiB,IAAM,KACxC0K,KAAM7H,OAAOpF,KAAKuC,iBAAiB,IAAM,MAEvCvC,KAAKoB,OAASpB,KAAKkN,gBACrBN,EAAeC,MAAQzH,OAAOpF,KAAKmN,UAAU,IAAM,KACnDL,EAAkBE,IAAM5H,OAAOpF,KAAKkN,cAAc,GAAKlN,KAAKmN,UAAU,GAAKnN,KAAKuC,iBAAiB,IAAM,KACvGuK,EAAkBG,KAAO7H,OAAOpF,KAAKkN,cAAc,GAAKlN,KAAKuC,iBAAiB,IAAM,MAElFvC,KAAKwC,mBACPoK,EAAeC,MAAQ7M,KAAKwC,kBAE9BxC,KAAKC,qBAAuBwC,OAAO2K,OAAOR,EAAgBE,KAI5D/M,EAAA4C,UAAAqG,yBAAA,WACE,GAAKhJ,KAAKoB,MAAV,CAGApB,KAAKkN,cAAgB,CAAC,EAAG,GAEzB,QADIG,EAAuBrN,KAAKoB,MACzBiM,GACLrN,KAAKkN,cAAc,IAAMG,EAAQC,WAAa,EAC9CtN,KAAKkN,cAAc,IAAMG,EAAQE,YAAc,EAC/CF,EAAUA,EAAoB,aAGhCrN,KAAKmN,UAAY,CAAC,EAAG,GACrBnN,KAAKmN,UAAU,GAAKnN,KAAKoB,MAAMoM,wBAAwBX,MACvD7M,KAAKmN,UAAU,GAAKnN,KAAKoB,MAAMoM,wBAAwBC,OAEvDzN,KAAK2M,4BAIP5M,EAAA4C,UAAA+K,cAAA,WACE1N,KAAKmB,gBAAiB,GAIxBpB,EAAA4C,UAAAgL,eAAA,SAAeC,OACPzM,EAAiBnB,KAAKmB,eAC5BnB,KAAKmB,gBAAiB,EAClBA,IAIDnB,KAAKoC,sBACLpC,KAAKoB,OAAUwM,EAAMC,OAAOC,aAAa,wBAA0B9N,KAAKmE,KAI3EnE,KAAKmC,aAAc,6BA10BtB4L,EAAAA,UAASlO,KAAA,CAAC,CACTmO,SAAU,wBACVC,SAAA,stnBAgECC,EAAAA,yBAIAA,EAAAA,6BACAA,EAAAA,+BACAA,EAAAA,0BACAA,EAAAA,mCACAA,EAAAA,uBACAA,EAAAA,uBACAA,EAAAA,0BACAA,EAAAA,4BACAA,EAAAA,0BAGAA,EAAAA,8BAMAA,EAAAA,4BAGAA,EAAAA,uBAMAA,EAAAA,2BACAA,EAAAA,oCACAA,EAAAA,qCACAA,EAAAA,8BACAA,EAAAA,gCACAA,EAAAA,gCACAA,EAAAA,0BACAA,EAAAA,2BAQAA,EAAAA,wCAqrBAC,EAAAA,aAAYtO,KAAA,CAAC,wCAoBbsO,EAAAA,aAAYtO,KAAA,CAAC,iCAKbsO,EAAAA,aAAYtO,KAAA,CAAC,iBAAkB,CAAC,+BCv0BnC,SAAAuO,IAKmBpO,KAAAQ,OAAS,CACxB,UACA,WACA,QACA,MACA,QACA,SACA,MACA,OACA,MACA,KACA,OACA,gBAGF4N,EAAAzL,UAAA0L,UAAA,SAAUxG,GACR,OAAO7H,KAAKQ,OAAOqH,6BArBtByG,EAAAA,KAAIzO,KAAA,CAAC,CACJ0O,KAAM,sBCcR,iCAZCC,EAAAA,SAAQ3O,KAAA,CAAC,CACR4O,aAAc,CACZ1O,EACAqO,GAEFM,QAAS,CACPC,EAAAA,cAEFC,QAAS,CACP7O","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgPersianDatepickerService {\n\n  constructor(\n  ) {}\n}\n","import moment from 'moment-jalaali';\nimport { YearModel } from './model/year.model';\nimport { MonthModel } from './model/month.model';\nimport { DayModel } from './model/day.model';\nimport {\n  Component,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit\n} from '@angular/core';\n\n@Component({\n  selector: 'ng-persian-datepicker',\n  templateUrl: './ng-persian-datepicker.component.html',\n  styleUrls: ['./ng-persian-datepicker.component.scss']\n})\nexport class NgPersianDatepickerComponent implements OnInit, OnDestroy {\n\n  constructor(\n  ) {}\n\n  id: string;\n  containerInlineStyle: object = {};\n  weekDays: Array<string>;\n  //\n  private preventClose: boolean;\n  private uiYearViewModel = true;\n  private uiMonthViewModel = true;\n  //\n  viewDateTitle = '';\n  viewModes: Array<string> = ['day'];\n  currentViewMode = 0;\n  //\n  private today: moment.Moment;\n  private selectedDate: moment.Moment;\n  private viewDate: moment.Moment;\n  //\n  years: YearModel[] = [];\n  months: MonthModel[] = [];\n  days: Array<DayModel[]> = [];\n  //\n  private hour = 0;\n  private minute = 0;\n  private second = 0;\n  //\n  hourText = '';\n  minuteText = '';\n  secondText = '';\n  amPmText = '';\n  //\n  private fastTimeChangeTimeOut = 345;\n  private fastTimeChangeInterval = 123;\n  //\n  private increaseHourTimeout: any;\n  private increaseHourInterval: any;\n  //\n  private decreaseHourTimeout: any;\n  private decreaseHourInterval: any;\n  //\n  private increaseMinuteTimeout: any;\n  private increaseMinuteInterval: any;\n  //\n  private decreaseMinuteTimeout: any;\n  private decreaseMinuteInterval: any;\n  //\n  private increaseSecondTimeout: any;\n  private increaseSecondInterval: any;\n  //\n  private decreaseSecondTimeout: any;\n  private decreaseSecondInterval: any;\n  //\n  private wasInsideClick = false;\n  private inputEventFocusListener: any;\n  private inputEventInputListener: any;\n  //\n  private inputPosition: Array<number>;\n  private inputSize: Array<number>;\n  @Input() input: HTMLInputElement = null;\n  // date\n  // tslint:disable-next-line:variable-name\n  private _dateValue: string | number = '';\n  @Input() dateValue: string | number = '';\n  @Input() dateInitValue = true;\n  @Input() dateIsGregorian = false;\n  @Input() dateFormat = 'jYYYY-jMM-jDD HH:mm:ss';\n  @Input() dateGregorianFormat = 'YYYY-MM-DD HH:mm:ss';\n  @Input() dateMin: number = null;\n  @Input() dateMax: number = null;\n  @Input() dateOnInit: (shamsiDate: string, gregorianDate: string, timestamp: number) => void = () => {};\n  @Input() dateOnSelect: (shamsiDate: string, gregorianDate: string, timestamp: number) => void = () => {};\n  // time\n  _timeEnable = true;\n  @Input()\n  set timeEnable(value: boolean) {\n    this._timeEnable = value;\n    this.setTime();\n    this.seTimeText();\n  }\n  @Input() timeShowSecond = true;\n  // tslint:disable-next-line:variable-name\n  _timeMeridian = false;\n  @Input()\n  set timeMeridian(value: boolean) {\n    this._timeMeridian = value;\n    this.seTimeText();\n  }\n  // ui\n  @Input() uiTheme = 'default';\n  @Input() uiIsVisible = false;\n  @Input() uiHideOnOutsideClick = true;\n  @Input() uiHideAfterSelectDate = true;\n  @Input() uiAutoPosition = false;\n  @Input() uiPositionOffset: Array<number> = [0, 0];\n  @Input() uiContainerWidth = '';\n  @Input()\n  set uiYearView(value: boolean) {\n    this.uiYearViewModel = value;\n    this.checkViewModes();\n  }\n  get uiYearView(): boolean {\n    return this.uiYearViewModel;\n  }\n  @Input()\n  set uiMonthView(value: boolean) {\n    this.uiMonthViewModel = value;\n    this.checkViewModes();\n  }\n  get uiMonthView(): boolean {\n    return this.uiMonthViewModel;\n  }\n\n  ngOnInit(): void {\n    this.setId();\n    moment.loadPersian({\n      usePersianDigits: false,\n      dialect: 'persian-modern'\n    });\n    this.setWeekDays();\n    //\n    this.setViewModes();\n    //\n    this.setToday();\n    this.setDateInitValue();\n    //\n    this.setSelectedDate();\n    this.setViewDate();\n    //\n    this.setTime();\n    this.seTimeText();\n    //\n    this.setInputValue();\n    this.lockInputValue();\n    this.setShowOnInputFocus();\n  }\n\n  ngOnDestroy(): void {\n    if (this.input) {\n      this.input.removeEventListener('focus', this.inputEventFocusListener);\n      this.input.removeEventListener('input', this.inputEventInputListener);\n    }\n  }\n\n  setId(): void {\n    this.id = 'ng-persian-datepicker-' + Math.random().toString(36).substr(2, 9);\n  }\n\n  setWeekDays(): void {\n    this.weekDays = moment.weekdaysMin();\n    this.weekDays.unshift(this.weekDays.pop());\n  }\n\n  setViewModes(): void {\n    this.viewModes = ['day'];\n    if (this.uiMonthView) {\n      this.viewModes.push('month');\n    }\n    if (this.uiYearView) {\n      this.viewModes.push('year');\n    }\n    if (this.viewModes.length <= this.currentViewMode) {\n      this.currentViewMode = 0;\n    }\n  }\n\n  checkViewModes(): void {\n    let viewModesCount = 1;\n    if (this.uiYearView) {\n      viewModesCount++;\n    }\n    if (this.uiMonthView) {\n      viewModesCount++;\n    }\n    if (viewModesCount !== this.viewModes.length) {\n      this.setViewModes();\n    }\n  }\n\n  setToday(): void {\n    this.today = moment();\n  }\n\n  setDateInitValue(): void {\n    if (this.dateValue || !this.dateInitValue) {\n      return;\n    }\n    this._dateValue = this.today.valueOf();\n    this.selectedDate = moment((this._dateValue as number));\n    this.dateOnInit(\n      String(this.selectedDate.format(this.dateFormat)),\n      String(this.selectedDate.format(this.dateGregorianFormat)),\n      Number(this.selectedDate.valueOf())\n    );\n  }\n\n  setSelectedDate(): void {\n    if (!this.dateValue) {\n      return;\n    }\n    this._dateValue = this.dateValue;\n    if (typeof this._dateValue === 'string') {\n      if (this.dateIsGregorian) {\n        this._dateValue = moment((this._dateValue as string), this.dateGregorianFormat).valueOf();\n      } else {\n        this._dateValue = moment((this._dateValue as string), this.dateFormat).valueOf();\n      }\n    }\n    this.selectedDate = moment((this._dateValue as number));\n  }\n\n  setViewDate(): void {\n    if (!this._dateValue) {\n      this.viewDate = moment(this.today);\n    } else {\n      this.viewDate = moment(this.selectedDate);\n    }\n    this.onChangeViewDate();\n  }\n\n  onChangeViewDate(): void {\n    this.viewDate.startOf('jMonth');\n    this.setYears();\n    this.setMonths();\n    this.setDays();\n    this.setViewDateTitle();\n  }\n\n  setYears(): void {\n    this.years = [];\n    const years = moment(this.viewDate);\n    years.startOf('jYear');\n    years.add(-6, 'jYear');\n    for (let i = 0 ; i < 12 ; i++) {\n      const year = [years.valueOf(), years.jYear()];\n      this.years.push({\n        timestamp: year[0],\n        value: year[1],\n        isYearOfTodayDate: this.isYearOfTodayDate(year),\n        isYearOfSelectedDate: this.isYearOfSelectedDate(year),\n        isYearDisabled: this.isYearDisabled(year)\n      });\n      years.add(1, 'jYear');\n    }\n  }\n\n  setMonths(): void {\n    this.months = [];\n    const months = moment(this.viewDate);\n    months.startOf('jYear');\n    for (let i = 0 ; i < 12 ; i++) {\n      const month = [months.valueOf(), months.jYear(), months.jMonth()];\n      this.months.push({\n        timestamp: month[0],\n        year: month[1],\n        indexValue: month[2],\n        isMonthOfTodayDate: this.isMonthOfToday(month),\n        isMonthOfSelectedDate: this.isMonthOfSelectedDate(month),\n        isMonthDisabled: this.isMonthDisabled(month)\n      });\n      months.add(1, 'jMonth');\n    }\n  }\n\n  setDays(): void {\n    this.days = [];\n    //\n    const prevMonthDetails: Array<Array<number>> = [];\n    const currentMonthDetails: Array<Array<number>> = [];\n    const nextMonthDetails: Array<Array<number>> = [];\n    //\n    const prevMonth = moment(this.viewDate);\n    const currentMonth = moment(this.viewDate);\n    const nextMonth = moment(this.viewDate);\n    //\n    prevMonth.add(-1, 'jMonth');\n    nextMonth.add(1, 'jMonth');\n    //\n    const currentMonthDays = moment.jDaysInMonth(currentMonth.jYear(), currentMonth.jMonth());\n    const prevMonthDays = moment.jDaysInMonth(prevMonth.jYear(), prevMonth.jMonth());\n    const nextMonthDays = moment.jDaysInMonth(nextMonth.jYear(), nextMonth.jMonth());\n    //\n    for (let i = 0 ; i < prevMonthDays ; i++) {\n      prevMonthDetails.push([prevMonth.valueOf(), prevMonth.jYear(), prevMonth.jMonth(), prevMonth.jDate()]);\n      prevMonth.add(1, 'day');\n    }\n    for (let i = 0 ; i < currentMonthDays ; i++) {\n      currentMonthDetails.push([currentMonth.valueOf(), currentMonth.jYear(), currentMonth.jMonth(), currentMonth.jDate()]);\n      currentMonth.add(1, 'day');\n    }\n    for (let i = 0 ; i < nextMonthDays ; i++) {\n      nextMonthDetails.push([nextMonth.valueOf(), nextMonth.jYear(), nextMonth.jMonth(), nextMonth.jDate()]);\n      nextMonth.add(1, 'day');\n    }\n    //\n    for (let row = 0; row < 6 ; row++) {\n      const rowValue: DayModel[] = [];\n      for (let col = 0; col < 7 ; col++) {\n        const fromPrevMonth = (this.viewDate.day() === 6) ? 0 : (this.viewDate.day() + 1);\n        let index = ((row * 7) + col) - fromPrevMonth;\n        let day: Array<number> = null;\n        if (index < 0) {\n          index = prevMonthDetails.length - (fromPrevMonth - col);\n          day = prevMonthDetails[index];\n        } else if (index >= currentMonthDetails.length) {\n          index = index - currentMonthDetails.length;\n          day = nextMonthDetails[index];\n        } else {\n          day = currentMonthDetails[index];\n        }\n        rowValue.push({\n          timestamp: day[0],\n          year: day[1],\n          monthIndex: day[2],\n          value: day[3],\n          isDayInCurrentMonth: this.isDayInCurrentMonth(day),\n          isDayOfTodayDate: this.isDayOfTodayDate(day),\n          isDayOfSelectedDate: this.isDayOfSelectedDate(day),\n          isDayDisabled: this.isDayDisabled(day)\n        });\n      }\n      this.days.push(rowValue);\n    }\n  }\n\n  setViewDateTitle(): void {\n    const year = this.viewDate.jYear();\n    switch (this.viewModes[this.currentViewMode]) {\n      case 'day':\n        this.viewDateTitle = this.viewDate.format('jMMMM') + ' ' + year.toString();\n        break;\n      case 'month':\n        this.viewDateTitle = year.toString();\n        break;\n      case 'year':\n        this.viewDateTitle = (year - 6).toString() + '-' + (year + 5).toString();\n        break;\n    }\n  }\n\n  setTime(): void {\n    if (this.selectedDate) {\n      this.hour = this.selectedDate.hour();\n      this.minute = this.selectedDate.minute();\n      this.second = this.selectedDate.second();\n      return;\n    }\n    this.hour = this.today?.hour() || 0;\n    this.minute = this.today?.minute() || 0;\n    this.second = this.today?.second() || 0;\n  }\n\n  seTimeText(): void {\n    this.setHourText();\n    this.setMinuteText();\n    this.setSecondText();\n    this.setAmPmText();\n  }\n\n  setHourText(): void {\n    const hour = this.hour;\n    if (!this._timeMeridian) {\n      this.hourText = hour.toString().padStart(2, '0');\n      return;\n    }\n    if (hour === 0) {\n      this.hourText = (12).toString().padStart(2, '0');\n      return;\n    }\n    if (hour > 12) {\n      this.hourText = (hour - 12).toString().padStart(2, '0');\n      return;\n    }\n    this.hourText = hour.toString().padStart(2, '0');\n  }\n\n  setMinuteText(): void {\n    this.minuteText = this.minute.toString().padStart(2, '0');\n  }\n\n  setSecondText(): void {\n    this.secondText = this.second.toString().padStart(2, '0');\n  }\n\n  setAmPmText(): void {\n    if (this.hour >= 12) {\n      this.amPmText = 'PM';\n      return;\n    }\n    this.amPmText = 'AM';\n  }\n\n  setInputValue(dispatchEvent: boolean = true): void {\n    if (!this.input) {\n      return;\n    }\n    if (this._dateValue) {\n      this.input.value = moment((this._dateValue as number)).format(this.dateFormat);\n      if (dispatchEvent) {\n        this.input.dispatchEvent(new Event('input'));\n      }\n    }\n  }\n\n  lockInputValue(): void {\n    if (!this.input) {\n      return;\n    }\n    this.inputEventInputListener = () => {\n      this.setInputValue(false);\n    };\n    this.input.addEventListener('input', this.inputEventInputListener);\n  }\n\n  setShowOnInputFocus(): void {\n    if (!this.input) {\n      return;\n    }\n    this.input.setAttribute('data-datepicker-id', this.id);\n    this.inputEventFocusListener = () => {\n      this.calcInputPositionAndSize();\n      this.uiIsVisible = true;\n    };\n    this.input.addEventListener('focus', this.inputEventFocusListener);\n  }\n\n  skipViewDate(skip: number, type: number): void {\n    if (type === 1) {\n      this.viewDate.add(skip, 'jYear');\n    } else if (type === 2) {\n      this.viewDate.add(skip, 'jMonth');\n    }\n  }\n\n  navigate(forward: boolean = true): void {\n    let skip = 1;\n    if (!forward) {\n      skip = skip * -1;\n    }\n    switch (this.viewModes[this.currentViewMode]) {\n      case 'day':\n        this.skipViewDate(skip, 2);\n        break;\n      case 'month':\n        this.skipViewDate(skip, 1);\n        break;\n      case 'year':\n        this.skipViewDate((skip * 12), 1);\n        break;\n    }\n    this.onChangeViewDate();\n  }\n\n  nextViewMode(): void {\n    if (this.viewModes.length === 1) {\n      return;\n    }\n    if (this.viewModes.length <= (this.currentViewMode + 1)) {\n      this.currentViewMode = 0;\n      this.setViewDateTitle();\n      return;\n    }\n    this.currentViewMode++;\n    this.setViewDateTitle();\n  }\n\n  selectToday(): void {\n    this.setToday();\n    this.preventClose = true;\n    this.changeSelectedDate(this.today);\n  }\n\n  yearClick(year: YearModel): void {\n    if (year.isYearDisabled) {\n      return;\n    }\n    this.viewDate = moment(year.timestamp);\n    let viewModeIndex = this.viewModes.indexOf('month');\n    if (viewModeIndex === -1) {\n      viewModeIndex = this.viewModes.indexOf('day');\n    }\n    this.currentViewMode = viewModeIndex;\n    this.onChangeViewDate();\n  }\n\n  monthClick(month: MonthModel): void {\n    if (month.isMonthDisabled) {\n      return;\n    }\n    this.viewDate = moment(month.timestamp);\n    this.currentViewMode = this.viewModes.indexOf('day');\n    this.onChangeViewDate();\n  }\n\n  dayClick(day: DayModel): void {\n    if (day.isDayDisabled) {\n      return;\n    }\n    this.changeSelectedDate(moment(day.timestamp));\n  }\n\n  isYearOfTodayDate(year: Array<number>): boolean {\n    return (\n      this.today.jYear() === year[1]\n    );\n  }\n\n  isYearOfSelectedDate(year: Array<number>): boolean {\n    if (!this.selectedDate) {\n      return false;\n    }\n    return (\n      year[1] === this.selectedDate.jYear()\n    );\n  }\n\n  isYearDisabled(month: Array<number>): boolean {\n    return !this.isDateInRange(month[0], true, false);\n  }\n\n  isMonthOfToday(month: Array<number>): boolean {\n    return (\n      this.today.jYear() === month[1] &&\n      this.today.jMonth() === month[2]\n    );\n  }\n\n  isMonthOfSelectedDate(month: Array<number>): boolean {\n    if (!this.selectedDate) {\n      return false;\n    }\n    return (\n      month[1] === this.selectedDate.jYear() &&\n      month[2] === this.selectedDate.jMonth()\n    );\n  }\n\n  isMonthDisabled(month: Array<number>): boolean {\n    return !this.isDateInRange(month[0], false, true);\n  }\n\n  isDayInCurrentMonth(day: Array<number>): boolean {\n    return (\n      day[1] === this.viewDate.jYear() &&\n      day[2] === this.viewDate.jMonth()\n    );\n  }\n\n  isDayOfTodayDate(day: Array<number>): boolean {\n    return (\n      day[1] === this.today.jYear() &&\n      day[2] === this.today.jMonth() &&\n      day[3] === this.today.jDate()\n    );\n  }\n\n  isDayOfSelectedDate(day: Array<number>): boolean {\n    if (!this.selectedDate) {\n      return false;\n    }\n    return (\n      day[1] === this.selectedDate.jYear() &&\n      day[2] === this.selectedDate.jMonth() &&\n      day[3] === this.selectedDate.jDate()\n    );\n  }\n\n  isDayDisabled(day: Array<number>): boolean {\n    return !this.isDateInRange(day[0], false, false);\n  }\n\n  isDateInRange(date: number, isYear: boolean, isMonth: boolean): boolean {\n    const result: Array<boolean> = [];\n    if (this.dateMin) {\n      const min = moment(this.dateMin);\n      if (isYear) {\n        min.startOf('jYear');\n      }\n      if (isMonth) {\n        min.startOf('jMonth');\n      }\n      result.push(min.valueOf() <= date);\n    }\n    if (this.dateMax) {\n      const max = moment(this.dateMax);\n      if (isYear) {\n        max.startOf('jYear');\n      }\n      if (isMonth) {\n        max.startOf('jMonth');\n      }\n      result.push(max.valueOf() >= date);\n    }\n    return !(result.indexOf(false) !== -1);\n  }\n\n  changeSelectedDate(date: moment.Moment): void {\n    this.selectedDate = moment(date);\n    this.onChangeSelectedDate();\n  }\n\n  onChangeSelectedDate(): void {\n    if (this._timeEnable) {\n      this.selectedDate.hour(this.hour);\n      this.selectedDate.minute(this.minute);\n      this.selectedDate.second(this.second);\n    } else {\n      this.setToday();\n      this.selectedDate.hour(this.today.hour());\n      this.selectedDate.minute(this.today.minute());\n      this.selectedDate.second(this.today.second());\n    }\n    this._dateValue = this.selectedDate.valueOf();\n    this.setInputValue();\n    if (this.uiHideAfterSelectDate && !this.preventClose) {\n      this.uiIsVisible = false;\n    } else {\n      this.preventClose = false;\n    }\n    this.setViewDate();\n    this.dateOnSelect(\n      String(this.selectedDate.format(this.dateFormat)),\n      String(this.selectedDate.format(this.dateGregorianFormat)),\n      Number(this.selectedDate.valueOf())\n    );\n  }\n\n  increaseHour(): void {\n    if ((this.hour + 1) === 24) {\n      this.hour = 0;\n    } else {\n      this.hour++;\n    }\n    this.onTimeChange();\n  }\n\n  decreaseHour(): void {\n    if ((this.hour - 1) === -1) {\n      this.hour = 23;\n    } else {\n      this.hour--;\n    }\n    this.onTimeChange();\n  }\n\n  increaseMinute(): void {\n    if ((this.minute + 1) === 60) {\n      this.minute = 0;\n    } else {\n      this.minute++;\n    }\n    this.onTimeChange();\n  }\n\n  decreaseMinute(): void {\n    if ((this.minute - 1) === -1) {\n      this.minute = 59;\n    } else {\n      this.minute--;\n    }\n    this.onTimeChange();\n  }\n\n  increaseSecond(): void {\n    if ((this.second + 1) === 60) {\n      this.second = 0;\n    } else {\n      this.second++;\n    }\n    this.onTimeChange();\n  }\n\n  decreaseSecond(): void {\n    if ((this.second - 1) === -1) {\n      this.second = 59;\n    } else {\n      this.second--;\n    }\n    this.onTimeChange();\n  }\n\n  toggleAmPm(): void {\n    if (this.hour < 12) {\n      this.hour += 12;\n    } else {\n      this.hour -= 12;\n    }\n    this.onTimeChange();\n  }\n\n  onTimeChange(): void {\n    this.preventClose = true;\n    this.seTimeText();\n    this.changeSelectedDate(this.selectedDate);\n  }\n\n  setIncreaseHourInterval(): void {\n    this.increaseHourTimeout = setTimeout(() => {\n      this.increaseHourInterval = setInterval(() => {\n        this.increaseHour();\n      }, this.fastTimeChangeInterval);\n    }, this.fastTimeChangeTimeOut);\n  }\n\n  clearIncreaseHourInterval(): void {\n    clearTimeout(this.increaseHourTimeout);\n    clearInterval(this.increaseHourInterval);\n  }\n\n  setDecreaseHourInterval(): void {\n    this.decreaseHourTimeout = setTimeout(() => {\n      this.decreaseHourInterval = setInterval(() => {\n        this.decreaseHour();\n      }, this.fastTimeChangeInterval);\n    }, this.fastTimeChangeTimeOut);\n  }\n\n  clearDecreaseHourInterval(): void {\n    clearTimeout(this.decreaseHourTimeout);\n    clearInterval(this.decreaseHourInterval);\n  }\n\n  setIncreaseMinuteInterval(): void {\n    this.increaseMinuteTimeout = setTimeout(() => {\n      this.increaseMinuteInterval = setInterval(() => {\n        this.increaseMinute();\n      }, this.fastTimeChangeInterval);\n    }, this.fastTimeChangeTimeOut);\n  }\n\n  clearIncreaseMinuteInterval(): void {\n    clearTimeout(this.increaseMinuteTimeout);\n    clearInterval(this.increaseMinuteInterval);\n  }\n\n  setDecreaseMinuteInterval(): void {\n    this.decreaseMinuteTimeout = setTimeout(() => {\n      this.decreaseMinuteInterval = setInterval(() => {\n        this.decreaseMinute();\n      }, this.fastTimeChangeInterval);\n    }, this.fastTimeChangeTimeOut);\n  }\n\n  clearDecreaseMinuteInterval(): void {\n    clearTimeout(this.decreaseMinuteTimeout);\n    clearInterval(this.decreaseMinuteInterval);\n  }\n\n  setIncreaseSecondInterval(): void {\n    this.increaseSecondTimeout = setTimeout(() => {\n      this.increaseSecondInterval = setInterval(() => {\n        this.increaseSecond();\n      }, this.fastTimeChangeInterval);\n    }, this.fastTimeChangeTimeOut);\n  }\n\n  clearIncreaseSecondInterval(): void {\n    clearTimeout(this.increaseSecondTimeout);\n    clearInterval(this.increaseSecondInterval);\n  }\n\n  setDecreaseSecondInterval(): void {\n    this.decreaseSecondTimeout = setTimeout(() => {\n      this.decreaseSecondInterval = setInterval(() => {\n        this.decreaseSecond();\n      }, this.fastTimeChangeInterval);\n    }, this.fastTimeChangeTimeOut);\n  }\n\n  clearDecreaseSecondInterval(): void {\n    clearTimeout(this.decreaseSecondTimeout);\n    clearInterval(this.decreaseSecondInterval);\n  }\n\n  setContainerInlineStyle(): void {\n    if (!this.uiAutoPosition) {\n      return;\n    }\n    const containerWidth = {\n      width: '200px'\n    };\n    const containerPosition = {\n      position: 'absolute',\n      top: String(this.uiPositionOffset[0]) + 'px',\n      left: String(this.uiPositionOffset[1]) + 'px',\n    };\n    if (this.input && this.inputPosition) {\n      containerWidth.width = String(this.inputSize[0]) + 'px';\n      containerPosition.top = String(this.inputPosition[0] + this.inputSize[1] + this.uiPositionOffset[0]) + 'px';\n      containerPosition.left = String(this.inputPosition[1] + this.uiPositionOffset[1]) + 'px';\n    }\n    if (this.uiContainerWidth) {\n      containerWidth.width = this.uiContainerWidth;\n    }\n    this.containerInlineStyle = Object.assign(containerWidth, containerPosition);\n  }\n\n  @HostListener('window:resize')\n  calcInputPositionAndSize(): void {\n    if (!this.input) {\n      return;\n    }\n    this.inputPosition = [0, 0];\n    let element: HTMLElement = this.input;\n    while (element) {\n      this.inputPosition[0] += element.offsetTop || 0;\n      this.inputPosition[1] += element.offsetLeft || 0;\n      element = element.offsetParent as HTMLElement;\n    }\n    //\n    this.inputSize = [0, 0];\n    this.inputSize[0] = this.input.getBoundingClientRect().width;\n    this.inputSize[1] = this.input.getBoundingClientRect().height;\n    //\n    this.setContainerInlineStyle();\n  }\n\n  @HostListener('click')\n  onInsideClick(): void {\n    this.wasInsideClick = true;\n  }\n\n  @HostListener('document:click', ['$event'])\n  onOutsideClick(event: any): void {\n    const wasInsideClick = this.wasInsideClick;\n    this.wasInsideClick = false;\n    if (wasInsideClick) {\n      return;\n    }\n    if (\n      !this.uiHideOnOutsideClick ||\n      (this.input && (event.target.getAttribute('data-datepicker-id') === this.id))\n    ) {\n      return;\n    }\n    this.uiIsVisible = false;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'monthText'\n})\nexport class MonthTextPipe implements PipeTransform {\n\n  private readonly months = [\n    'فروردین',\n    'اردیبهشت',\n    'خرداد',\n    'تیر',\n    'مرداد',\n    'شهریور',\n    'مهر',\n    'آبان',\n    'آذر',\n    'دی',\n    'بهمن',\n    'اسفند',\n  ];\n\n  transform(index: number): string {\n    return this.months[index];\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgPersianDatepickerComponent } from './ng-persian-datepicker.component';\nimport { CommonModule } from '@angular/common';\nimport { MonthTextPipe } from './month-text.pipe';\n\n@NgModule({\n  declarations: [\n    NgPersianDatepickerComponent,\n    MonthTextPipe\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    NgPersianDatepickerComponent\n  ]\n})\nexport class NgPersianDatepickerModule {}\n"]}